ssr-nat(1)
=========

NAME
----
ssr-nat - helper script to setup NAT rules for transparent proxy

SYNOPSIS
--------
*ssr-nat*
 [-ouUfh]
 [-s <server_ip>] [-S <server_ip>] [-l <local_port>]
 [-L <local_port>] [-i <ip_list_file>] [-a <lan_ips>]
 [-b <wan_ips>] [-w <wan_ips>] [-e <extra_options>]

DESCRIPTION
-----------
*Shadowsocksr-libev* is a lightweight and secure socks5 proxy.
It is a port of the original shadowsocksr created by clowwindy.
*Shadowsocksr-libev* is written in pure C and takes advantage of libev to
achieve both high performance and low resource consumption.

`ssr-nat`(1) sets up NAT rules for `ssr-redir`(1) to provide traffic redirection.
It requires netfilter's NAT module and `iptables`(8).
For more information, check out `shadowsocksr-libev`(8) and the following
'EXAMPLE' section.

OPTIONS
-------
-s <server_ip>::
IP address of shadowsocksr remote server

-l <local_port>::
Port number of shadowsocksr local server

-S <server_ip>::
IP address of shadowsocksr remote UDP server

-L <local_port>::
Port number of shadowsocksr local UDP server

-i <ip_list_file>::
a file whose content is bypassed ip list

-a <lan_ips>::
LAN IP of access control, need a prefix to define access control mode

-b <wan_ips>::
WAN IP of will be bypassed

-w <wan_ips>::
WAN IP of will be forwarded

-e <extra_options>::
Extra options for iptables

-o::
Apply the rules to the OUTPUT chain

-u::
Enable udprelay mode, TPROXY is required

-U::
Enable udprelay mode, using different IP and ports for TCP and UDP

-f::
Flush the rules

-h::
Show this help message and exit

EXAMPLE
-------
`ssr-nat` requires `iptables`(8). Here is an example:

....
# Enable NAT rules for shadowsocksr,
# with both TCP and UDP redirection enabled,
# and applied for both PREROUTING and OUTPUT chains
root@Wrt:~# ssr-nat -s 192.168.1.100 -l 1080 -u -o

# Disable and flush all NAT rules for shadowsocksr
root@Wrt:~# ssr-nat -f
....

SEE ALSO
--------
`ssr-local`(1),
`ssr-server`(1),
`ssr-tunnel`(1),
`ssr-manager`(1),
`shadowsocksr-libev`(8),
`iptables`(8),
/etc/shadowsocksr-libev/config.json

